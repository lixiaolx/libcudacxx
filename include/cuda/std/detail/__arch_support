#ifndef _LIBCUDACXX___ARCH_SUPPORT
#define _LIBCUDACXX___ARCH_SUPPORT

#include "__preprocessor"

#if defined(_LIBCUDACXX_COMPILER_PGI)
#  include <nvhpc/if_target.h>

#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM35 stdpar::target::sm35
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM37 stdpar::target::sm37
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM50 stdpar::target::sm50
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM52 stdpar::target::sm52
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM53 stdpar::target::sm53
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM60 stdpar::target::sm60
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM61 stdpar::target::sm61
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM62 stdpar::target::sm62
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM70 stdpar::target::sm70
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM72 stdpar::target::sm72
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM75 stdpar::target::sm75
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM80 stdpar::target::sm80

#  define _LIBCUDACXX_CUDA_ARCH_VAL stdpar::target::device

#  define _LIBCUDACXX_CUDA_IS_HOST stdpar::target::is_host

#elif defined(_LIBCUDACXX_COMPILER_NVCC)

#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM35 350
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM37 370
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM50 500
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM52 520
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM53 530
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM60 600
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM61 610
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM62 620
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM70 700
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM72 720
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM75 750
#  define _LIBCUDACXX_CUDA_ARCH_VAL_SM80 800

// There is a case where __CUDA_ARCH__ is 0 while undefined that can cause host code paths to emit a device code dispatch entry
#  define _LIBCUDACXX_CUDA_ARCH_VAL (defined(__CUDA_ARCH__) ? __CUDA_ARCH__ : 10000)

#  define _LIBCUDACXX_CUDA_IS_HOST !defined(__CUDA_ARCH__)

#endif

#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM35 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM35)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM37 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM37)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM50 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM50)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM52 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM52)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM53 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM53)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM60 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM60)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM61 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM61)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM62 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM62)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM70 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM70)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM72 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM72)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM75 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM75)
#define LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM80 (_LIBCUDACXX_CUDA_ARCH_VAL < _LIBCUDACXX_CUDA_ARCH_VAL_SM80)

#define LIBCUDACXX_CUDA_ARCH_SM35 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM35)
#define LIBCUDACXX_CUDA_ARCH_SM37 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM37)
#define LIBCUDACXX_CUDA_ARCH_SM50 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM50)
#define LIBCUDACXX_CUDA_ARCH_SM52 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM52)
#define LIBCUDACXX_CUDA_ARCH_SM53 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM53)
#define LIBCUDACXX_CUDA_ARCH_SM60 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM60)
#define LIBCUDACXX_CUDA_ARCH_SM61 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM61)
#define LIBCUDACXX_CUDA_ARCH_SM62 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM62)
#define LIBCUDACXX_CUDA_ARCH_SM70 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM70)
#define LIBCUDACXX_CUDA_ARCH_SM72 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM72)
#define LIBCUDACXX_CUDA_ARCH_SM75 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM75)
#define LIBCUDACXX_CUDA_ARCH_SM80 (_LIBCUDACXX_CUDA_ARCH_VAL == _LIBCUDACXX_CUDA_ARCH_VAL_SM80)

#define LIBCUDACXX_CUDA_ARCH_HOST (_LIBCUDACXX_CUDA_IS_HOST)

// Platform invoke mechanisms
#if defined(_LIBCUDACXX_COMPILER_PGI)

#define LIBCUDACXX_CUDA_INVOKE2(q) LIBCUDACXX_CUDA_ARCH_##q
#define LIBCUDACXX_CUDA_INVOKE(q, fn) if target(LIBCUDACXX_CUDA_INVOKE2(q)) {fn();}

#elif defined(_LIBCUDACXX_COMPILER_NVCC)

#if (LIBCUDACXX_CUDA_ARCH_SM35)
#  define LIBCUDACXX_CUDA_INVOKE_SM35(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM35(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM37)
#  define LIBCUDACXX_CUDA_INVOKE_SM37(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM37(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM50)
#  define LIBCUDACXX_CUDA_INVOKE_SM50(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM50(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM52)
#  define LIBCUDACXX_CUDA_INVOKE_SM52(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM52(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM53)
#  define LIBCUDACXX_CUDA_INVOKE_SM53(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM53(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM60)
#  define LIBCUDACXX_CUDA_INVOKE_SM60(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM60(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM61)
#  define LIBCUDACXX_CUDA_INVOKE_SM61(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM61(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM62)
#  define LIBCUDACXX_CUDA_INVOKE_SM62(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM62(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM70)
#  define LIBCUDACXX_CUDA_INVOKE_SM70(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM70(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM72)
#  define LIBCUDACXX_CUDA_INVOKE_SM72(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM72(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM75)
#  define LIBCUDACXX_CUDA_INVOKE_SM75(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM75(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_SM80)
#  define LIBCUDACXX_CUDA_INVOKE_SM80(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_SM80(fn) {}
#endif

#if !defined(__CUDA_ARCH__)
#  define LIBCUDACXX_CUDA_INVOKE_HOST(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_HOST(fn) {}
#endif

// NVCC Less than stuff

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM35)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM35(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM35(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM37)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM37(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM37(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM50)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM50(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM50(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM52)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM52(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM52(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM53)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM53(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM53(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM60)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM60(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM60(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM61)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM61(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM61(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM62)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM62(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM62(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM70)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM70(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM70(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM72)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM72(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM72(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM75)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM75(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM75(fn) {}
#endif

#if (LIBCUDACXX_CUDA_ARCH_LESS_THAN_SM80)
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM80(fn) {fn();}
#else
#  define LIBCUDACXX_CUDA_INVOKE_LESS_THAN_SM80(fn) {}
#endif

#define LIBCUDACXX_CUDA_INVOKE(q, fn) LIBCUDACXX_CUDA_INVOKE_##q(fn)

#endif // _LIBCUDACXX_COMPILER_NVCC

#define LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)  LIBCUDACXX_CUDA_INVOKE(q, fn)

#define LIBCUDACXX_CUDA_DISPATCH_HANDLE0()
#define LIBCUDACXX_CUDA_DISPATCH_HANDLE2(q, fn)        LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)
#define LIBCUDACXX_CUDA_DISPATCH_HANDLE4(q, fn, ...)   LIBCUDACXX_CUDA_DISPATCH_HANDLE2(__VA_ARGS__)  LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)
#define LIBCUDACXX_CUDA_DISPATCH_HANDLE6(q, fn, ...)   LIBCUDACXX_CUDA_DISPATCH_HANDLE4(__VA_ARGS__)  LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)
#define LIBCUDACXX_CUDA_DISPATCH_HANDLE8(q, fn, ...)   LIBCUDACXX_CUDA_DISPATCH_HANDLE6(__VA_ARGS__)  LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)
#define LIBCUDACXX_CUDA_DISPATCH_HANDLE10(q, fn, ...)  LIBCUDACXX_CUDA_DISPATCH_HANDLE8(__VA_ARGS__)  LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)
#define LIBCUDACXX_CUDA_DISPATCH_HANDLE12(q, fn, ...)  LIBCUDACXX_CUDA_DISPATCH_HANDLE10(__VA_ARGS__) LIBCUDACXX_CUDA_INVOKE_UNDERLYING_ARCH(q, fn)

#define LIBCUDACXX_CUDA_DISPATCH(...) LIBCUDACXX_PP_DISPATCH(LIBCUDACXX_CUDA_DISPATCH_HANDLE, __VA_ARGS__)

#endif // _LIBCUDACXX___ARCH_SUPPORT